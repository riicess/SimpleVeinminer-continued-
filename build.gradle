plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.siphalor.de/" }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex '(dev|io\\.github)\\.onyxstudios.*'
            includeGroupByRegex 'dev\\.emi.*'
        }
    }
    maven {
        url "https://maven.isxander.dev/releases"
    }


}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mixin extras
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.2")))

    // Mod menu
    modApi("com.terraformersmc:modmenu:${project.modmenu_version}")

    // Remove CompleteConfig dependencies
    // modImplementation("com.github.Lortseam.completeconfig:gui-yacl:${project.completeconfig_version}")
    // modImplementation("com.github.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}")
    // include("com.github.Lortseam.completeconfig:base:${project.completeconfig_version}")
    // include("com.github.Lortseam.completeconfig:gui-yacl:${project.completeconfig_version}")
    // include("com.github.Lortseam.completeconfig:gui-cloth:${project.completeconfig_version}")

    // Add YACL dependency
    modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}"

    // Cloth basic math
    modApi("me.shedaniel.cloth:basic-math:+")
    include("me.shedaniel.cloth:basic-math:+")

    // Cardinal Components
    // modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"
    // modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}"
    // include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}"
    // include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}"

    // Cloth config
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property 'id', project.mod_id
    inputs.property 'name', project.mod_name
    inputs.property 'version', project.version
    inputs.property 'completeconfig', project.completeconfig_version
    inputs.property 'minecraft_version', project.accepted_versions

    // fabric.mod.json
    filesMatching('fabric.mod.json') {
        expand(['id': project.mod_id, 'name': project.mod_name, 'version': project.version, 'completeconfig': project.completeconfig_version, 'minecraft_version': project.accepted_versions])
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}